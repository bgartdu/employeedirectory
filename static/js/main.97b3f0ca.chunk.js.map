{"version":3,"sources":["logo.svg","EmployeeLine.js","EmployeeDirectory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","EmployeeLine","classes","this","props","index","className","src","picture","name","phone","email","dob","React","Component","EmployeeDirectory","handleSearch","event","filter","target","value","setState","search","changeSortMode","currentMode","state","sort","currentAsc","sortAsc","clickedThing","innerText","toLowerCase","error","isLoaded","items","employeeMatchesSearch","employee","includes","fetch","res","json","result","employees","results","map","it","first","last","date","substring","cell","thumbnail","message","sorted","a","b","hasOwnProperty","localeCompare","reverse","id","onChange","type","for","onClick","href","item","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.97b3f0ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\n\nclass EmployeeLine extends React.Component {\n\trender() {\n\t\tconst classes = \"col s12 row tight brown valign-wrapper \" \n\t\t\t+ ((this.props.index % 2) ? \"lighten-5\" : \"lighten-4\")\n\t\treturn <div className = {classes}>\n\t\t\n\t\t\t<div className=\"col s1\"><img src={this.props.picture}></img></div>\n\t\t\t<div className=\"col s3\">{this.props.name}</div>\n\t\t\t<div className=\"col s2\">{this.props.phone}</div>\n\t\t\t<div className=\"col s4\">{this.props.email}</div>\n\t\t\t<div className=\"col s2\">{this.props.dob}</div>\n\t\t</div>\n\t}\n}\n\nexport default EmployeeLine;","import React from 'react';\nimport EmployeeLine from \"./EmployeeLine\"\n\nclass EmployeeDirectory extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsearch: \"\",\n\t\t\tsort: \"\",\n\t\t\tsortAsc: false,\n\t\t\terror: null,\n\t\t\tisLoaded: false,\n\t\t\titems: []\n\t\t};\n\t\tthis.employeeMatchesSearch = (employee) => {\n\t\t\tlet search = this.state.search.toLowerCase();\n\n\t\t\treturn search === \"\"\n\t\t\t\t|| (employee.name.toLowerCase().includes(search))\n\t\t\t\t|| (employee.email.toLowerCase().includes(search))\n\t\t\t\t|| (employee.dob.toLowerCase().includes(search))\n\t\t\t\t|| (employee.phone.toLowerCase().includes(search))\n\t\t}\n\t}\n\n\t\n\t\n\tasync componentDidMount() {\n\t\ttry {\n\t\t\tlet res = await fetch(\"https://randomuser.me/api/?results=100&nat=us\")\n\t\t\tlet result = await res.json();\n\t\t\tlet employees = result.results.map(it => {\n\t\t\t\treturn {\n\t\t\t\t\tname: it.name.first + \" \" + it.name.last,\n\t\t\t\t\temail: it.email,\n\t\t\t\t\tdob: it.dob.date.substring(0, 10),\n\t\t\t\t\tphone: it.cell,\n\t\t\t\t\tpicture: it.picture.thumbnail\n\t\t\t\t}\n\t\t\t})\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tisLoaded: true,\n\t\t\t\titems: employees,\n\t\t\t})\n\t\t} catch (error){\n\t\t\tthis.setState({\n\t\t\t\tisLoaded: true,\n\t\t\t\terror,\n\t\t\t})\n\t\t}\n\t}\n\n\thandleSearch = event => {\n\t\t// console.log(event.target.value)\n\t\tconst filter = event.target.value\n\t\tthis.setState({search: filter})\n\t}\n\n\tchangeSortMode = (event) => {\n\t\tconst currentMode = this.state.sort;\n\t\tconst currentAsc = this.state.sortAsc;\n\n\t\tconst clickedThing = event.target.innerText.toLowerCase();\n\t\t\n\t\tif (currentMode === clickedThing) {\n\t\t\tif (!currentAsc) { // Clicked once, toggle sort direction\n\t\t\t\tthis.setState({sortAsc: true})\n\t\t\t\t\n\t\t\t} else { // Clicked twice, revert to \"default\"/unsorted\n\t\t\t\tthis.setState({sort: \"\", sortAsc: false})\n\t\t\t}\n\t\t\t\n\t\t} else { // Not clicked yet, sort by the clicked criteria \n\t\t\tthis.setState({sort: clickedThing, sortAsc: false});\n\t\t}\n\t}\n\t\n\t\n\trender() {\n\n\t\tconst { error, isLoaded, items, sort, sortAsc } = this.state;\n\t\tif (error) {\n\t\t\treturn <div>Error: {error.message}</div>;\n\t\t} else if (!isLoaded) {\n\t\t\treturn <div>Loading...</div>\n\t\t}\n\t\t\n\t\t// Make a copy of items, and sort the copy as needed\n\n\t\tconst sorted = [...items].filter(this.employeeMatchesSearch);\n\n\t\tif (sort !== \"\") {\n\t\t\tsorted.sort( (a,b) => {\n\t\t\t\tif (a.hasOwnProperty(sort) && b.hasOwnProperty(sort)) {\n\t\t\t\t\treturn a[sort].localeCompare(b[sort]);\n\t\t\t\t}\n\n\t\t\t\treturn 0;\n\t\t\t} );\n\t\t\tif (sortAsc) {\n\t\t\t\tsorted.reverse();\n\t\t\t}\n\t\t}\n\n\t\t\n\n\t\treturn  <div className=\"row\">\n\t\t\t<div className=\"col s4 white white-text\">.</div>\n\t\t\t<div className=\"input-field col s4 center\">\n\t\t\t\t<input id = \"searchField\" onChange = {this.handleSearch}type=\"text\" className=\"validate\"></input>\n         \t\t<label for=\"searchField\">Search</label>\n\t\t\t</div>\n\t\t\t<div className=\"col s4 white white-text\">.</div>\n\t\t\t\n\t\t\t<div className =\"card col s12 row tight strong\">\n\t\t\t<div className=\"col s12 white white-text\">.</div>\n\t\t\t\t<div className=\"col s1 fakeLink\">Image</div>\n\t\t\t\t<div className=\"col s3\"> {this.state.sort === \"name\" && (this.state.sortAsc ? \"▲\" : \"▼\")} <a onClick={this.changeSortMode} href=\"#\">Name</a> </div>\n\t\t\t\t<div className=\"col s2\">{this.state.sort === \"phone\" && (this.state.sortAsc ? \"▲\" : \"▼\")}<a onClick={this.changeSortMode} href=\"#\">Phone</a> </div>\n\t\t\t\t<div className=\"col s4\">{this.state.sort === \"email\" && (this.state.sortAsc ? \"▲\" : \"▼\")}<a onClick={this.changeSortMode} href=\"#\">Email</a> </div>\n\t\t\t\t<div className=\"col s2\">{this.state.sort === \"dob\" && (this.state.sortAsc ? \"▲\" : \"▼\")}<a onClick={this.changeSortMode} href=\"#\">DOB</a> </div>\n\t\t\t\t<div className=\"col s12 white-text\">spacer</div>\n\t\t\t</div>\n\n\t\t\t\n\t\t\t{sorted\n\t\t\t\t.map((item, index) => (\n\t\t\t\t<EmployeeLine index={index}\n\t\t\t\t\t\t\t\t\t\tpicture = {item.picture}\n\t\t\t\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\t\t\t\tphone={item.phone}\n\t\t\t\t\t\t\t\t\t\temail={item.email}\n\t\t\t\t\t\t\t\t\t\tdob={item.dob}/>\n\n\t\t\t))}\n\t\t\t\n\t\t\t</div>\n\t}\n}\n\nexport default EmployeeDirectory;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport EmployeeDirectory from \"./EmployeeDirectory\"\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col s12 blue darken-3 white-text\">\n\t\t\t\t\t<h1>\n\t\t\t\t\t\tEmployee Directory\n\t\t\t\t\t</h1>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tClick in the search field and, while you know what to do!\n\t\t\t\t\t</p>\n\t\t\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col s12 red red-text\">c</div>\n\t\t\t</div>\n\t\t\t<EmployeeDirectory />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t// <React.StrictMode>\n\t\t<App />,\n\t// </React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}